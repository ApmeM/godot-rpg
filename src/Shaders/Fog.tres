[gd_resource type="ShaderMaterial" load_steps=4 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform float intensity: hint_range(0.1, 2.0);
uniform sampler2D noise_texture : hint_albedo;
uniform vec2 offset;

void fragment()
{
	vec2 coord = SCREEN_UV + offset;
	vec4 noise1 = texture(noise_texture, coord + TIME * 0.05);
	vec4 noise2 = texture(noise_texture, vec2(coord.y, coord.x) - TIME * 0.05);
	vec4 noise = mix(noise1, noise2, 0.5);
	
	vec4 original = texture(TEXTURE, UV);

	if (original.a == 0.0) {
		noise.a = 0.0;
	}else{
		noise.a = noise.r;
	}
	
	COLOR = noise;
}"

[sub_resource type="OpenSimplexNoise" id=2]

[sub_resource type="NoiseTexture" id=3]
seamless = true
noise = SubResource( 2 )

[resource]
shader = SubResource( 1 )
shader_param/intensity = null
shader_param/offset = null
shader_param/noise_texture = SubResource( 3 )
